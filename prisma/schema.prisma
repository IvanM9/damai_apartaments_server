// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id             String   @id @default(cuid())
  firstName      String   @map("first_name") @db.VarChar(255)
  lastName       String?  @map("last_name") @db.VarChar(255)
  email          String?  @db.VarChar(255)
  description    String?  @db.Text
  phone          String?  @db.VarChar(10)
  isActive       Boolean  @default(true) @map("is_active")
  identification String?  @db.VarChar(255)
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt      DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  leases Lease[]

  @@map("tenant")
}

model Apartment {
  id            String   @id @default(cuid())
  name          String   @db.VarChar(255)
  numberOfRooms Int      @map("number_of_rooms")
  monthlyRent   Decimal  @map("monthly_rent") @db.Money
  description   String   @db.Text
  status        Boolean  @default(true) @map("status")
  busy          Boolean  @default(false) @map("busy")
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  leases Lease[]
  bills  Bill[]

  @@map("apartment")
}

model Payment {
  id              String   @id @default(cuid())
  amount          Decimal  @map("amount") @db.Money
  description     String?  @db.Text
  date            DateTime @map("date") @db.Date
  createdAt       DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  methodPaymentId String   @map("method_payment_id")
  leaseId         String   @map("lease_id")

  methodPayment MethodPayment @relation(fields: [methodPaymentId], references: [id])
  lease         Lease         @relation(fields: [leaseId], references: [id])

  @@map("payment")
}

model MethodPayment {
  id          String   @id @default(cuid())
  name        String   @db.VarChar(255)
  description String?  @db.Text
  status      Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  payments Payment[]

  @@map("method_payment")
}

model Lease {
  id          String    @id @default(cuid())
  startDate   DateTime  @map("start_date") @db.Date
  endDate     DateTime? @map("end_date") @db.Date
  monthlyRent Decimal   @map("monthly_rent") @db.Money
  status      Boolean   @default(true)
  description String?   @db.Text
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()
  tenantId    String    @map("tenant_id")
  apartmentId String    @map("apartment_id")

  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  apartment Apartment @relation(fields: [apartmentId], references: [id])

  payments Payment[]

  @@map("lease")
}

model Bill {
  id          String   @id @default(cuid())
  description String   @db.Text
  amount      Decimal  @map("amount") @db.Money
  status      Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz()
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at") @db.Timestamptz()

  apartmentId String @map("apartment_id")

  apartment Apartment @relation(fields: [apartmentId], references: [id])

  @@map("bill")
}
